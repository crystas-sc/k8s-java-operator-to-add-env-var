apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: nginx-svc
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx
status:
  loadBalancer: {}
---
---
# apiVersion: v1
# kind: Pod
# metadata:
#   creationTimestamp: null
#   labels:
#     run: nginx
#   name: nginx
# spec:
#   containers:
#   - image: nginx
#     name: nginx
#     env:
#     - name: DEMO_GREETING
#       value: "Hello from the environment"
#     - name: DEMO_FAREWELL
#       value: "Such a sweet sorrow"
#     ports:
#     - containerPort: 80
#     resources: {}
#   dnsPolicy: ClusterFirst
#   restartPolicy: Always
# status: {}
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
    addIngressHostValToEnv: "yes"
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        env:
        - name: DEMO_GREETING
          value: "Hello from the k8s"
        ports:
        - containerPort: 80
        resources: {}
status: {}
---

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-svc
            port:
              number: 80